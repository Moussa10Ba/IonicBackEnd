<?php //%255BApp%255CEntity%255CTransaction%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['ApiPlatform\\Core\\Annotation\\ApiResource'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('ApiPlatform\\Core\\Annotation\\ApiResource')),
        clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
    ],
    null,
    [
        'stdClass' => [
            'collectionOperations' => [
                [
                    'post' => [
                        'method' => 'POST',
                        'path' => '/transactions',
                    ],
                    'get' => [
                        'method' => 'GET',
                        'path' => '/transactions',
                    ],
                    'getBycode' => [
                        'method' => 'POST',
                        'path' => '/transactions/getbycode',
                        'controller' => 'App\\Controller\\TransactionController::getInfos',
                        'normalization_context' => [
                            'groups' => [
                                'getbycodeRead',
                            ],
                        ],
                        'dormalization_context' => [
                            'groups' => [
                                'getbycodeWrite',
                            ],
                        ],
                    ],
                ],
            ],
            'itemOperations' => [
                [
                    'put',
                    'get' => [
                        'method' => 'GET',
                        'path' => '/transactions',
                    ],
                ],
            ],
            'attributes' => [
                [
                    'security' => '(is_granted(\'ROLE_UtilisateurAgence\') or is_granted(\'ROLE_AdminAgence\'))',
                    'security_message' => 'Acces Denied',
                    'paginationItemsPerPage' => 100,
                    'normalization_context' => [
                        'groups' => [
                            'transactionRead',
                        ],
                    ],
                    'denormalization_context' => [
                        'groups' => [
                            'transactionWrite',
                        ],
                    ],
                    'route_prefix' => '/user',
                ],
            ],
            'repositoryClass' => [
                1 => 'App\\Repository\\TransactionRepository',
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
    ],
    []
); }];
